{
  "name": "小圣的GitHub博客------Code-Base",
  "tagline": "小圣的博客",
  "body": "### 程序员的学习过程是无止境的，程序员学习的途径是多样的。可以从视频教程中领悟，也可以从他人的代码中理解。但当我们专注于某一个平台在开发的时候，对于某个API使用或者功能实现有疑问，通常简单的测试可以让我们知道可能的效果，异或网上搜索一下别人的经验，不过最好的途径应该还是阅读官方的文档解释。常常可以更全面，具体的了解。当然也不排除有时候官方文档说了跟没说似地，或者根本说得文不对题。\r\n\r\n半年多里一直从事Mobile游戏的开发，Android和iOS平台都有接触，不过还是以iOS为主，为了解决问题也查阅了不少的文档资料。就像以前学.NET一定会去MSDN，iOS上的问题就会先去查阅Apple Developer。总得感觉Library的文档还是MSDN做得比较好，说明详细例子也比较多。而Apple Developer上对于API的注释都不够详细，而且没有例子告之该如何使用。\r\n\r\napple-pdf不过Apple的文档也有它独有的好处，比如绝大部分的文档都有相应的PDF格式文件提供下载，对于离线阅读十分的方便，而且还可以在PDF做一些相应的笔记，针对某几页进行打印等等。\r\n\r\n另外，Apple还会给出该API所对应的框架结构使用的文档，其中会有一些代码例子。但是其实那些例子依然不够，还是需要到其它地方寻找。但是这些讲述结构的文档却是体现出API设计的来源，所以十分值得阅读，只是需要花时间了理解和消化。Companion-guides\r\n\r\n在此，我简单文类罗列了一些我在学习和搜索的过程中看到的那些Apple官方的iOS开发相关的文档资料。其中粗体显示的文档，是我个人觉得比较有用的部分。你可以点击链接进行在线阅读。异或在打开的页面点击右上角的PDF，下载下来阅读。因为之前一直都是下载来看的，都全部累积了下来，所以在文章的最后，我也放了链接提供全部文档的打包下载。\r\nComputer Graphics\r\n\r\n    OpenGL ES Programming Guide for iOS\r\n    Animation Types and Timing Programming Guide\r\n    Core Animation Programming Guide\r\n    Core Animation Cookbook\r\n    Core Image Programming Guide\r\n    Quartz 2D Programming Guide\r\n\r\nObjective-C\r\n\r\n    Blocks Programming Topics\r\n    Cocoa Fundamentals Guide\r\n    Collections Programming Topics\r\n    Error Handling Programming Guide\r\n    Exception Programming Topics\r\n    Advanced Memory Management Programming Guide\r\n    Objective-C Runtime Programming Guide\r\n    Object-Oriented Programming with Objective-C\r\n    Programming with Objective-C\r\n    Programming with Objective-C\r\n    Objective-C Runtime Reference\r\n    Memory Management Programming Guide for Core Foundation\r\n\r\nProgramming Guide\r\n\r\n    Multimedia Programming Guide\r\n    Archives and Serializations Programming Guide\r\n    Core Data Programming Guide\r\n    Key-Value Coding Programming Guide\r\n    Key-Value Observing Programming Guide\r\n    Resource Programming Guide\r\n    Threading Programming Guide\r\n    Notification Programming Topics\r\n    Predicate Programming Guide\r\n    Property List Programming Guide\r\n    URL Loading System Programming Guide\r\n    Preferences and Settings Programming Guide\r\n    Bundle Programming Guide\r\n    Document-Based App Programming Guide for iOS\r\n    Event Handling Guide for iOS\r\n    File System Programming Guide\r\n    Concurrency Programming Guide\r\n    iOS App Programming Guide\r\n    Runtime Configuration Guidelines\r\n    Local and Push Notification Programming Guide\r\n    Location Awareness Programming Guide\r\n    Distributed Objects Programming Topics\r\n    Code Loading Programming Topics\r\n    Dynamic Library Programming Topics\r\n    File System Advanced Programming Topics\r\n\r\nUser Interface\r\n\r\n    Drawing and Printing Guide for iOS\r\n    Address Book Programming Guide for iOS\r\n    iOS Human Interface Guidelines\r\n    Table View Programming Guide for iOS\r\n    Collection View Programming Guide for iOS\r\n    Scroll View Programming Guide for iOS\r\n    View Controller Catalog for iOS\r\n    View Programming Guide for iOS\r\n    View Controller Programming Guide for iOS\r\n\r\n### Designer Templates\r\nWe’ve crafted some handsome templates for you to use. Go ahead and click 'Continue to layouts' to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved.\r\n\r\n### Creating pages manually\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor’s GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out our [documentation](https://help.github.com/pages) or [contact support](https://github.com/contact) and we’ll help you sort it out.\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}